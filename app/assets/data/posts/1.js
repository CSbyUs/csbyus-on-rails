// TODO: find pictures!
// course id is a three digital number, the first digit represents its category
// csbyus courses start with a 9
module.exports = {
    posts: [
        {
          title:"The Importance of CS Education",
          author:"Megan Phibbons",
          id: '0',
          slug: 'importance-of-cs-ed',
          content:"This is an interesting blog about why we should be focused on CS education at young ages!",
          timestamp:"2008-02-14 20:00",
          url: 'https://docs.google.com/document/d/19IMnuMVTnc7IGcx7RKxECNn7inCPE2h14FEy7_6tHPY/edit?usp=sharing',
          content: `As a Computer Science major at Duke and a teaching assistant for our Data Structures and Algorithms class, I feel that I have the opportunity to witness firsthand the way that exposure to computer science prior to college can affect students’ learning. For students without prior experience, there can be a steep learning curve when they get to college, and it is worsened by the fact that some of their peers have known the basics for years. This problem exists for all, but is\ especially prevalent for historically underrepresented groups in computing, such as women and people of color. With this blog post, I’m going to analyze exactly why we see this difference in prior experience and the long-term effects of a lack of early CS education and discuss how our team, CSByUs, is trying to combat this.
        	As we go through the life of a student, I want you to keep in mind the analogy of the leaky STEM pipeline, a phenomenon commonly used to describe the loss of STEM students and workers as they progress through their education. This analogy hinges on the fact that at younger ages, people are interested in STEM fields, but over time, they go on to pursue other majors in college or careers upon graduating. To give an example, we can analyze The Chronicle’s discussion of women in computer science classes over time found here: https://www.dukechronicle.com/article/2017/12/why-women-dont-stick-with-tech. For CS 101, an introductory class, the statistics are approximately half and half for men and women. The percentage of women drops about 10% for CS 201, the data structures and algorithms class. By the time students reach CS 230, a class required for the computer science major, the percentage drops to only about ¼ females. Even during the course of three computer science classes, the STEM pipeline experiences some pretty significant leaks. This implies that for some reason, when looking at higher level computer science classes, more and more women decide to stop pursuing computer science as a major. Why is this? As a female in computer science, I would probably say that it is a self-reinforcing problem. As I see less and less women in my CS classes, I become less and less motivated myself. This causes more women to drop CS, which in turn hurts others’ motivations. To fix this, it is necessary to provide support for underrepresented groups in CS to prevent this feeling of inadequacy and desire to drop out. But how do we even begin to approach that?
          One of the main sources of this problem is the education gap, which is heavily tied into privilege. Our team read a chapter of “Stuck In the Shallow End: Education, Race, and Computing” by Jane Margolis in which she analyzes the way that privilege and race affect stigma and accessibility of computer science education. During her paper, she categorizes schools as privileged and underprivileged. Privileged schools are generally defined to be those with more funding, better resources, and more skilled teachers, whereas underprivileged schools are in poorer areas, have less funding, and a significant lack of resources compared to other schools. Margolis found that in less privileged high schools, the teachers were less likely to be skilled in CS education and encourage students to pursue the field. Additionally, these schools also had less classes and equipment that was older and occasionally didn’t even work. This left many students feeling dissatisfied with their experience and unmotivated to continue on in the field. I believe that this lack of resources for certain groups directly influences what they pursue when they reach college or the workforce.
          Margolis also took note that there was a certain stigma surrounding computer science students. For example, many students reported that a computer science student looked like a “white or asian nerdy guy” or similar descriptors. Because this typical description of a CS student is so limiting, many other individuals feel as if they are not cut out to be in CS because they don’t match a certain demographic. This directly correlates to some of our critically identified problems as a team: access and personal relevance. Access refers to general geography, access to money, and access to better resources/teachers. Personal relevance refers to students who feel disinterested in CS because the problems commonly discussed aren’t relevant to all groups.
        	In order to combat this, our team believes that it is necessary to create accessible and relatable CS education for all students starting at a young age. In doing this, it is possible to boost interest for younger students while also facilitating equality and breaking the stigma before it is even developed. We believe that we can maintain higher percentages of computer science students regardless of their demographic and even out the percentages of various groups in CS. By this point, you may be wondering why it even matters. Colleges give out plenty of CS degrees, we have CS workers, so why do we care? Well, it isn’t always that simple.
        	Going back to our leaky STEM pipeline, it is necessary to address the fact that although we have many CS majors, we don’t necessarily have enough members in the CS workforce. Those that we do have are very uniform, and fit closely within the confines of the aforementioned CS stereotype. In the United States, a large portion of professional careers is dedicated to STEM. However, there are not enough educated employees to fill these careers. For example, according to Jonathan Rothwell’s article “Short on STEM Talent,” there are four million job vacancies in the computer science field, but there are only 40,000 Bachelor’s degrees in computer science earned annually. This is especially a problem noted for senior positions within CS. Although we seem to have many students studying computer science, it is a constantly growing field, and we want to continue supporting that growth.
        	Looking forward, I hope that one day Computer Science education can be accessible for all, and that we can remove the stigma surrounding studying CS. I think that with enough work on our part, we can encourage people from all backgrounds to study CS early on, which will in turn help lessen the steep learning curve in college and boost the STEM workforce as a whole. So far, we have already made a lot of progress toward this through teaching at schools in the local Durham community. During our lesson plans, students create apps with content that they choose, learn about fundamental concepts such as variables and algorithms, and more! If you’re interested in this, check out the About Me tab on our website and go ahead and read other blog posts!`
        },
    ]
};
